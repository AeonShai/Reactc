{"ast":null,"code":"var _jsxFileName = \"/home/mugetsu/Desktop/react-tut/weatherapp/src/context/CountryContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryContext = /*#__PURE__*/createContext();\nexport const CountryProvider = ({\n  children\n}) => {\n  _s();\n  const [cities, setCities] = useState(['London']);\n  useEffect(() => {\n    const url = 'https://countriesnow.space/api/v0.1/countries';\n    const fetchCities = async () => {\n      try {\n        const response = await axios.get(url);\n        setCities(response.data);\n        console.log(response);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchCities();\n  }, []);\n  console.log(cities);\n  return /*#__PURE__*/_jsxDEV(CountryContext.Provider, {\n    value: {\n      cities\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryProvider, \"HNTD0UxVQOM0byBiPwljSQunFd4=\");\n_c = CountryProvider;\nvar _c;\n$RefreshReg$(_c, \"CountryProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CountryContext","CountryProvider","children","_s","cities","setCities","url","fetchCities","response","get","data","console","log","err","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mugetsu/Desktop/react-tut/weatherapp/src/context/CountryContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CountryContext = createContext();\n\nexport const CountryProvider = ({ children }) => {\n    const [cities, setCities] = useState(['London']);\n    useEffect(() => {\n        const url = 'https://countriesnow.space/api/v0.1/countries'\n        const fetchCities = async () => {\n            try{\n                const response = await axios.get(url);\n                setCities(response.data);\n                console.log(response);\n            }catch(err){\n                console.error(err);\n            }\n        }\n        fetchCities();\n\n    } , []);\n    console.log(cities);\n    return (\n        <CountryContext.Provider value={{ cities }}>\n            {children}\n        </CountryContext.Provider>\n    );\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAChDC,SAAS,CAAC,MAAM;IACZ,MAAMU,GAAG,GAAG,+CAA+C;IAC3D,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACH,GAAG,CAAC;QACrCD,SAAS,CAACG,QAAQ,CAACE,IAAI,CAAC;QACxBC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACzB,CAAC,QAAMK,GAAG,EAAC;QACPF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;MACtB;IACJ,CAAC;IACDN,WAAW,CAAC,CAAC;EAEjB,CAAC,EAAG,EAAE,CAAC;EACPI,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EACnB,oBACIL,OAAA,CAACC,cAAc,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ;IAAO,CAAE;IAAAF,QAAA,EACtCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAAAjB,EAAA,CAtBYF,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}