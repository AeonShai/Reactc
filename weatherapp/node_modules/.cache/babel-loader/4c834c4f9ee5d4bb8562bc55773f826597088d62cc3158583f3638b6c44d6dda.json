{"ast":null,"code":"var _jsxFileName = \"/home/mugetsu/Desktop/react-tut/weatherapp/src/context/CountryContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryContext = /*#__PURE__*/createContext();\nexport const CountryProvider = ({\n  children\n}) => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const url = 'https://countriesnow.space/api/v0.1/countries';\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get(url);\n        console.log(\"API Yanıtı:\", response.data); // Yanıtın tamamını kontrol et\n\n        // Yanıttan 'data' özelliğine erişimi doğrula\n        if (response.data && response.data.data) {\n          const countryNames = response.data.data.map(country => country.name);\n          setCountries(countryNames); // Alınan ülke isimleri ile state güncelle\n        } else {\n          console.error(\"Beklenen yapıda veri bulunamadı.\");\n        }\n      } catch (err) {\n        console.error(\"API Hatası:\", err);\n      }\n    };\n    fetchCountries();\n  }, []);\n  console.log(\"Ülke İsimleri:\", countries);\n  return /*#__PURE__*/_jsxDEV(CountryContext.Provider, {\n    value: {\n      countries\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryProvider, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = CountryProvider;\nvar _c;\n$RefreshReg$(_c, \"CountryProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CountryContext","CountryProvider","children","_s","countries","setCountries","url","fetchCountries","response","get","console","log","data","countryNames","map","country","name","error","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mugetsu/Desktop/react-tut/weatherapp/src/context/CountryContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CountryContext = createContext();\n\nexport const CountryProvider = ({ children }) => {\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        const url = 'https://countriesnow.space/api/v0.1/countries';\n\n        const fetchCountries = async () => {\n            try {\n                const response = await axios.get(url);\n                console.log(\"API Yanıtı:\", response.data); // Yanıtın tamamını kontrol et\n\n                // Yanıttan 'data' özelliğine erişimi doğrula\n                if (response.data && response.data.data) {\n                    const countryNames = response.data.data.map((country) => country.name);\n                    setCountries(countryNames); // Alınan ülke isimleri ile state güncelle\n                } else {\n                    console.error(\"Beklenen yapıda veri bulunamadı.\");\n                }\n            } catch (err) {\n                console.error(\"API Hatası:\", err);\n            }\n        };\n\n        fetchCountries();\n    }, []);\n\n    console.log(\"Ülke İsimleri:\", countries);\n\n    return (\n        <CountryContext.Provider value={{ countries }}>\n            {children}\n        </CountryContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMU,GAAG,GAAG,+CAA+C;IAE3D,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACH,GAAG,CAAC;QACrCI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;;QAE3C;QACA,IAAIJ,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACA,IAAI,EAAE;UACrC,MAAMC,YAAY,GAAGL,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACE,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC;UACtEX,YAAY,CAACQ,YAAY,CAAC,CAAC,CAAC;QAChC,CAAC,MAAM;UACHH,OAAO,CAACO,KAAK,CAAC,kCAAkC,CAAC;QACrD;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVR,OAAO,CAACO,KAAK,CAAC,aAAa,EAAEC,GAAG,CAAC;MACrC;IACJ,CAAC;IAEDX,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEP,SAAS,CAAC;EAExC,oBACIL,OAAA,CAACC,cAAc,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB;IAAU,CAAE;IAAAF,QAAA,EACzCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAACrB,EAAA,CAjCWF,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}