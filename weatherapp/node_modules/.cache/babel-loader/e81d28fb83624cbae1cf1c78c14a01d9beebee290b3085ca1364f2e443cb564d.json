{"ast":null,"code":"var _jsxFileName = \"/home/mugetsu/Desktop/react-tut/weatherapp/src/components/CityComponent.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CountryContext } from \"../context/CountryContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CityComponent() {\n  _s();\n  const {\n    selectedCountry\n  } = useContext(CountryContext);\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  useEffect(() => {\n    const fetchCities = async () => {\n      // selectedCountry kontrolü\n      console.log(\"Selected Country:\", selectedCountry);\n      if (selectedCountry) {\n        try {\n          const response = await axios.post(\"https://countriesnow.space/api/v0.1/countries/cities\", {\n            country: selectedCountry // Doğru yapı\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          console.log(\"API Response:\", response.data); // API yanıtını konsola yazdır\n\n          // API yanıtından şehirleri ayıklayın\n          setCities(response.data.data); // response.data.data'dan şehirleri alın\n        } catch (error) {\n          console.error(\"Şehir verileri alınamadı:\", error);\n        }\n      } else {\n        console.log(\"No country selected.\");\n      }\n    };\n    fetchCities();\n  }, [selectedCountry]); // selectedCountry değiştiğinde bu useEffect tetiklenir\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedCountry ? `${selectedCountry} Ülkesine Ait Şehirler:` : \"Bir ülke seçin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), cities.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: city\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) // Şehirleri listele\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hen\\xFCz \\u015Fehir verisi yok.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CityComponent, \"jkKdbvyhL6UIkNDp3eM2xX1/v8k=\");\n_c = CityComponent;\nexport default CityComponent;\nvar _c;\n$RefreshReg$(_c, \"CityComponent\");","map":{"version":3,"names":["useContext","useState","useEffect","axios","CountryContext","jsxDEV","_jsxDEV","CityComponent","_s","selectedCountry","cities","setCities","selectedCity","setSelectedCity","fetchCities","console","log","response","post","country","headers","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","city","index","_c","$RefreshReg$"],"sources":["/home/mugetsu/Desktop/react-tut/weatherapp/src/components/CityComponent.js"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CountryContext } from \"../context/CountryContext\";\n\nfunction CityComponent() {\n  const { selectedCountry } = useContext(CountryContext);\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      // selectedCountry kontrolü\n      console.log(\"Selected Country:\", selectedCountry);\n\n      if (selectedCountry) {\n        try {\n          const response = await axios.post(\"https://countriesnow.space/api/v0.1/countries/cities\", {\n            country: selectedCountry, // Doğru yapı\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          });\n\n          console.log(\"API Response:\", response.data); // API yanıtını konsola yazdır\n\n          // API yanıtından şehirleri ayıklayın\n          setCities(response.data.data); // response.data.data'dan şehirleri alın\n        } catch (error) {\n          console.error(\"Şehir verileri alınamadı:\", error);\n        }\n      } else {\n        console.log(\"No country selected.\");\n      }\n    };\n\n    fetchCities();\n  }, [selectedCountry]); // selectedCountry değiştiğinde bu useEffect tetiklenir\n\n  return (\n    <div>\n      <h2>{selectedCountry ? `${selectedCountry} Ülkesine Ait Şehirler:` : \"Bir ülke seçin\"}</h2>\n      {cities.length > 0 ? (\n        <ul>\n          {cities.map((city, index) => (\n            <li key={index}>{city}</li> // Şehirleri listele\n          ))}\n        </ul>\n      ) : (\n        <p>Henüz şehir verisi yok.</p>\n      )}\n    </div>\n  );\n}\n\nexport default CityComponent;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAgB,CAAC,GAAGT,UAAU,CAACI,cAAc,CAAC;EACtD,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B;MACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,eAAe,CAAC;MAEjD,IAAIA,eAAe,EAAE;QACnB,IAAI;UACF,MAAMQ,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,sDAAsD,EAAE;YACxFC,OAAO,EAAEV,eAAe,CAAE;UAC5B,CAAC,EAAE;YACDW,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEFL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;;UAE7C;UACAV,SAAS,CAACM,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF,CAAC,MAAM;QACLP,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACrC;IACF,CAAC;IAEDF,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC,CAAC,CAAC;;EAEvB,oBACEH,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAKd,eAAe,GAAG,GAAGA,eAAe,yBAAyB,GAAG;IAAgB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC1FjB,MAAM,CAACkB,MAAM,GAAG,CAAC,gBAChBtB,OAAA;MAAAiB,QAAA,EACGb,MAAM,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBzB,OAAA;QAAAiB,QAAA,EAAiBO;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,CAAC;MAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELrB,OAAA;MAAAiB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAjDQD,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAmDtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}