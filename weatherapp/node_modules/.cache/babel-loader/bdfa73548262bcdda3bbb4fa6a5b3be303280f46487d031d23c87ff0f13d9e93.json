{"ast":null,"code":"var _jsxFileName = \"/home/mugetsu/Desktop/react-tut/weatherapp/src/context/Weather.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherContext = /*#__PURE__*/createContext();\nexport const WeatherProvider = ({\n  children\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const axios = require('axios');\n  useEffect(() => {\n    const apiKey = '8301a1d724014fac903131548240411';\n    const city = 'Istanbul';\n    const url = `http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&aqi=no`;\n    axios.get(url).then(response => {\n      setWeather(response.data.current);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: weather,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherProvider, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n_c = WeatherProvider;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","weather","setWeather","axios","require","apiKey","city","url","get","then","response","data","current","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mugetsu/Desktop/react-tut/weatherapp/src/context/Weather.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nconst WeatherContext = createContext();\n\nexport const WeatherProvider = ({ children }) => {\n    const [weather, setWeather] = useState(null);\n    const axios = require('axios');\n    useEffect(() => {\n        const apiKey = '8301a1d724014fac903131548240411';\n        const city = 'Istanbul';\n        const url = `http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&aqi=no`;\n        axios.get(url).then((response) => {\n            setWeather(response.data.current);\n        });\n    }, []);\n    return (\n        <WeatherContext.Provider value={weather}>\n            {children}\n        </WeatherContext.Provider>\n    );\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMS,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;EAC9BX,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAG,iCAAiC;IAChD,MAAMC,IAAI,GAAG,UAAU;IACvB,MAAMC,GAAG,GAAG,iDAAiDF,MAAM,MAAMC,IAAI,SAAS;IACtFH,KAAK,CAACK,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MAC9BR,UAAU,CAACQ,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACrC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACIhB,OAAA,CAACC,cAAc,CAACgB,QAAQ;IAACC,KAAK,EAAEb,OAAQ;IAAAF,QAAA,EACnCA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAAAlB,EAAA,CAhBYF,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}