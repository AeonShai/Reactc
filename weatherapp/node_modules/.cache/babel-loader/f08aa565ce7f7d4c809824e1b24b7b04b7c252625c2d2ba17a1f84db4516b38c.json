{"ast":null,"code":"var _jsxFileName = \"/home/mugetsu/Desktop/react-tut/weatherapp/src/context/CountryContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryContext = /*#__PURE__*/createContext();\nexport const CountryProvider = ({\n  children\n}) => {\n  _s();\n  const [countries, setCountries] = useState(['Loading...']);\n  useEffect(() => {\n    const url = 'https://countriesnow.space/api/v0.1/countries';\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.post(url); // API'yi POST olarak çağırıyoruz\n        // Sadece ülke isimlerini çekiyoruz\n        const countryNames = response.data.data.map(item => item.country);\n        setCountries(countryNames);\n        console.log(countryNames); // Ülke isimlerini konsola yazdırıyoruz\n      } catch (err) {\n        console.error(\"API Error:\", err);\n      }\n    };\n    fetchCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CountryContext.Provider, {\n    value: {\n      countries\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CountryProvider, \"d3Mc7PCzb0NsA0kxE3ChoKjFbSQ=\");\n_c = CountryProvider;\nvar _c;\n$RefreshReg$(_c, \"CountryProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CountryContext","CountryProvider","children","_s","countries","setCountries","url","fetchCountries","response","post","countryNames","data","map","item","country","console","log","err","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mugetsu/Desktop/react-tut/weatherapp/src/context/CountryContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CountryContext = createContext();\n\nexport const CountryProvider = ({ children }) => {\n    const [countries, setCountries] = useState(['Loading...']);\n\n    useEffect(() => {\n        const url = 'https://countriesnow.space/api/v0.1/countries';\n        \n        const fetchCountries = async () => {\n            try {\n                const response = await axios.post(url); // API'yi POST olarak çağırıyoruz\n                // Sadece ülke isimlerini çekiyoruz\n                const countryNames = response.data.data.map(item => item.country);\n                setCountries(countryNames);\n                console.log(countryNames); // Ülke isimlerini konsola yazdırıyoruz\n            } catch (err) {\n                console.error(\"API Error:\", err);\n            }\n        };\n\n        fetchCountries();\n    }, []);\n\n    return (\n        <CountryContext.Provider value={{ countries }}>\n            {children}\n        </CountryContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACZ,MAAMU,GAAG,GAAG,+CAA+C;IAE3D,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAACH,GAAG,CAAC,CAAC,CAAC;QACxC;QACA,MAAMI,YAAY,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC;QACjET,YAAY,CAACK,YAAY,CAAC;QAC1BK,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOO,GAAG,EAAE;QACVF,OAAO,CAACG,KAAK,CAAC,YAAY,EAAED,GAAG,CAAC;MACpC;IACJ,CAAC;IAEDV,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA,CAACC,cAAc,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB;IAAU,CAAE;IAAAF,QAAA,EACzCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAACrB,EAAA,CA1BWF,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}