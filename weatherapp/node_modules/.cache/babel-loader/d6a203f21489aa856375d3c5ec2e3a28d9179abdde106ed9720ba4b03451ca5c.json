{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CountryContext } from \"../context/CountryContext\";\nfunction CityComponent() {\n  _s();\n  const {\n    selectedCountry\n  } = useContext(CountryContext);\n  const [cities, setCities] = useState([null]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const axios = require(\"axios\");\n  let data = JSON.stringify({\n    country: \"Turkey\"\n  });\n  let config = {\n    method: \"post\",\n    maxBodyLength: Infinity,\n    url: \"https://countriesnow.space/api/v0.1/countries/cities\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: data\n  };\n  axios.request(config).then(response => {\n    console.log(JSON.stringify(response.data));\n  }).catch(error => {\n    console.log(error);\n  });\n}\n_s(CityComponent, \"MVDnGoh3/3fAB9DHLS5GiHocqso=\");\n_c = CityComponent;\nexport default CityComponent;\nvar _c;\n$RefreshReg$(_c, \"CityComponent\");","map":{"version":3,"names":["useContext","useState","useEffect","axios","CountryContext","CityComponent","_s","selectedCountry","cities","setCities","selectedCity","setSelectedCity","require","data","JSON","stringify","country","config","method","maxBodyLength","Infinity","url","headers","request","then","response","console","log","catch","error","_c","$RefreshReg$"],"sources":["/home/mugetsu/Desktop/react-tut/weatherapp/src/components/CityComponent.js"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CountryContext } from \"../context/CountryContext\";\n\nfunction CityComponent() {\n  const { selectedCountry } = useContext(CountryContext);\n  const [cities, setCities] = useState([null]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n\n  const axios = require(\"axios\");\n  let data = JSON.stringify({\n    country: \"Turkey\",\n  });\n\n  let config = {\n    method: \"post\",\n    maxBodyLength: Infinity,\n    url: \"https://countriesnow.space/api/v0.1/countries/cities\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    data: data,\n  };\n\n  axios\n    .request(config)\n    .then((response) => {\n      console.log(JSON.stringify(response.data));\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nexport default CityComponent;\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAgB,CAAC,GAAGP,UAAU,CAACI,cAAc,CAAC;EACtD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAME,KAAK,GAAGS,OAAO,CAAC,OAAO,CAAC;EAC9B,IAAIC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IACxBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,IAAIC,MAAM,GAAG;IACXC,MAAM,EAAE,MAAM;IACdC,aAAa,EAAEC,QAAQ;IACvBC,GAAG,EAAE,sDAAsD;IAC3DC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDT,IAAI,EAAEA;EACR,CAAC;EAEDV,KAAK,CACFoB,OAAO,CAACN,MAAM,CAAC,CACfO,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAACb,IAAI,CAACC,SAAS,CAACU,QAAQ,CAACZ,IAAI,CAAC,CAAC;EAC5C,CAAC,CAAC,CACDe,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACpB,CAAC,CAAC;AACN;AAACvB,EAAA,CA5BQD,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AA8BtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}