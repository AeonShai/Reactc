{"ast":null,"code":"var _jsxFileName = \"/home/mugetsu/Desktop/react-tut/weatherapp/src/components/CityComponent.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CountryContext } from \"../context/CountryContext\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CityComponent() {\n  _s();\n  const {\n    selectedCountry\n  } = useContext(CountryContext);\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  useEffect(() => {\n    const fetchCities = async () => {\n      // selectedCountry kontrolü\n      console.log(\"Selected Country:\", selectedCountry);\n      if (selectedCountry) {\n        try {\n          const response = await axios.post(\"https://countriesnow.space/api/v0.1/countries/cities\", {\n            country: selectedCountry // Doğru yapı\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          console.log(\"API Response:\", response.data); // API yanıtını konsola yazdır\n\n          // API yanıtından şehirleri ayıklayın\n          setCities(response.data.data); // response.data.data'dan şehirleri alın\n        } catch (error) {\n          console.error(\"Şehir verileri alınamadı:\", error);\n        }\n      } else {\n        console.log(\"No country selected.\");\n      }\n    };\n    fetchCities();\n  }, [selectedCountry]); // selectedCountry değiştiğinde bu useEffect tetiklenir\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Cities\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"city\",\n      id: \"city\",\n      value: selectedCity,\n      onChange: e => setSelectedCity(e.target.value),\n      className: \"small-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 4\n  }, this);\n}\n_s(CityComponent, \"jkKdbvyhL6UIkNDp3eM2xX1/v8k=\");\n_c = CityComponent;\nexport default CityComponent;\nvar _c;\n$RefreshReg$(_c, \"CityComponent\");","map":{"version":3,"names":["useContext","useState","useEffect","axios","CountryContext","jsxDEV","_jsxDEV","CityComponent","_s","selectedCountry","cities","setCities","selectedCity","setSelectedCity","fetchCities","console","log","response","post","country","headers","data","error","className","children","name","id","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","city","index","_c","$RefreshReg$"],"sources":["/home/mugetsu/Desktop/react-tut/weatherapp/src/components/CityComponent.js"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CountryContext } from \"../context/CountryContext\";\nimport \"../App.css\";\n\nfunction CityComponent() {\n  const { selectedCountry } = useContext(CountryContext);\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      // selectedCountry kontrolü\n      console.log(\"Selected Country:\", selectedCountry);\n\n      if (selectedCountry) {\n        try {\n          const response = await axios.post(\"https://countriesnow.space/api/v0.1/countries/cities\", {\n            country: selectedCountry, // Doğru yapı\n          }, {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          });\n\n          console.log(\"API Response:\", response.data); // API yanıtını konsola yazdır\n\n          // API yanıtından şehirleri ayıklayın\n          setCities(response.data.data); // response.data.data'dan şehirleri alın\n        } catch (error) {\n          console.error(\"Şehir verileri alınamadı:\", error);\n        }\n      } else {\n        console.log(\"No country selected.\");\n      }\n    };\n\n    fetchCities();\n  }, [selectedCountry]); // selectedCountry değiştiğinde bu useEffect tetiklenir\n\n  return (\n   <div className=\"Cities\">\n        <select\n            name=\"city\"\n            id=\"city\"\n            value={selectedCity}\n            onChange={(e) => setSelectedCity(e.target.value)}\n            className=\"small-select\"\n        >\n            <option value=\"\">Select a city</option>\n            {cities.map((city, index) => (\n            <option key={index} value={city}>\n                {city}\n            </option>\n            ))}\n        </select>\n        </div>\n\n  );\n}\n\nexport default CityComponent;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAgB,CAAC,GAAGT,UAAU,CAACI,cAAc,CAAC;EACtD,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B;MACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,eAAe,CAAC;MAEjD,IAAIA,eAAe,EAAE;QACnB,IAAI;UACF,MAAMQ,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,sDAAsD,EAAE;YACxFC,OAAO,EAAEV,eAAe,CAAE;UAC5B,CAAC,EAAE;YACDW,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEFL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;;UAE7C;UACAV,SAAS,CAACM,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF,CAAC,MAAM;QACLP,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACrC;IACF,CAAC;IAEDF,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC,CAAC,CAAC;;EAEvB,oBACCH,OAAA;IAAKiB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eAClBlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,MAAM;MACTC,KAAK,EAAEf,YAAa;MACpBgB,QAAQ,EAAGC,CAAC,IAAKhB,eAAe,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDJ,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAExBlB,OAAA;QAAQqB,KAAK,EAAC,EAAE;QAAAH,QAAA,EAAC;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtCxB,MAAM,CAACyB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxB/B,OAAA;QAAoBqB,KAAK,EAAES,IAAK;QAAAZ,QAAA,EAC3BY;MAAI,GADIC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGd;AAAC1B,EAAA,CAtDQD,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAwDtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}